name: Build and Deploy to Play Store

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.2'
        channel: 'stable'
        cache: true
    
    - name: Get dependencies
      run: flutter pub get
    
    #- name: Run tests
    #  run: flutter test

    - name: Configure Keystore
      run: |
        echo "$ANDROID_KEYSTORE_FILE" | base64 -d > android/app/keystore.jks
        echo "storeFile=keystore.jks" >> android/key.properties
        echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> android/key.properties
        echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> android/key.properties
        echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> android/key.properties
      env:
        ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
        KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
        KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
    
    - name: Build APK
      run: flutter build apk --release
    
    - name: Build App Bundle
      run: flutter build appbundle --release
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: android
    
    - name: Cache Fastlane
      uses: actions/cache@v3
      with:
        path: ~/.fastlane
        key: ${{ runner.os }}-fastlane-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-fastlane-
    
    - name: Install Fastlane
      run: |
        cd android
        gem install fastlane

    - name: Create Google Play Config file
      run: |
        echo "$PLAY_CONFIG_JSON" | base64 -d > android/play_config.json
      env:
        PLAY_CONFIG_JSON: ${{ secrets.PLAY_CONFIG_JSON }}
    
    - name: Deploy to Play Store
      run: |
        cd android
        bundle exec fastlane deploy
      env:
        PLAY_CONFIG_JSON: ${{ secrets.PLAY_CONFIG_JSON }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-artifacts
        path: |
          build/app/outputs/flutter-apk/
          build/app/outputs/bundle/
    
    - name: Clean up
      if: always()
      run: |
        rm -f android/app/keystore.jks
        rm -f android/key.properties
        rm -f android/play_config.json
